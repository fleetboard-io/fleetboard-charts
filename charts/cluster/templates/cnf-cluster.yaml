---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.cluster.localnamespace }}
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cnf-fleetboard
  namespace: fleetboard-system
spec:
  selector:
    matchLabels:
      app: cnf-fleetboard
  template:
    metadata:
      labels:
        app: cnf-fleetboard
        router.fleetboard.io/cnf: "true"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      hostNetwork: false
      containers:
        - name: controller
          command:
            - "/ep-controller"
          env:
            - name: FLEETBOARD_PODNAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}/controller:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
        - command:
            - /proxy/proxy
            - --config=/var/lib/kube-proxy/config.conf
            - --hostname-override=$(NODE_NAME)
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}/proxy:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/kube-proxy
              name: cnf-proxy
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
        - name: cnf
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}/cnf:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 0
            privileged: true
          command:
            - /cnf/cnf
          args:
            - --shared-namespace=syncer-operator
            - --local-namespace=syncer-operator
            - --as-hub={{ .Values.cluster.hub }}
            - --as-cluster=true
            - --hub-secret-namespace=fleetboard-system
            - --hub-secret-name={{ .Values.hub.secretName }}
            - --hub-url={{ .Values.hub.hubURL }}
          env:
            - name: FLEETBOARD_CLUSTERID
              value: {{ .Values.cluster.clusterID }}
            - name: FLEETBOARD_BOOTSTRAPTOKEN
              value: {{ .Values.hub.bootstraptoken }}
            - name: FLEETBOARD_PODNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: FLEETBOARD_PODNAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FLEETBOARD_NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/netns
              mountPropagation: Bidirectional
              name: host-ns
            - mountPath: /var/run/nri
              mountPropagation: HostToContainer
              name: host-nri
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext: { }
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
      volumes:
        - hostPath:
            path: /var/run/netns
            type: ""
          name: host-ns
        - hostPath:
            path: /var/run/nri
            type: DirectoryOrCreate
          name: host-nri
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - configMap:
            defaultMode: 420
            name: cnf-proxy
          name: cnf-proxy
